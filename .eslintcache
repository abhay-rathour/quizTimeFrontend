[{"E:\\Web\\CS299\\quiz-time\\src\\index.js":"1","E:\\Web\\CS299\\quiz-time\\src\\serviceWorker.js":"2","E:\\Web\\CS299\\quiz-time\\src\\App.js":"3","E:\\Web\\CS299\\quiz-time\\src\\Component\\MainComponent.js":"4","E:\\Web\\CS299\\quiz-time\\src\\redux\\configureStore.js":"5","E:\\Web\\CS299\\quiz-time\\src\\redux\\ActionCreators\\GroupActions.js":"6","E:\\Web\\CS299\\quiz-time\\src\\Component\\FooterComponent.js":"7","E:\\Web\\CS299\\quiz-time\\src\\Component\\StudentTestResultComponent.js":"8","E:\\Web\\CS299\\quiz-time\\src\\Component\\ExamComponent2.js":"9","E:\\Web\\CS299\\quiz-time\\src\\Component\\ExamComponent.js":"10","E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminTestResultStudent2.js":"11","E:\\Web\\CS299\\quiz-time\\src\\Component\\RegisterComponent.js":"12","E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminTestResultStudent.js":"13","E:\\Web\\CS299\\quiz-time\\src\\redux\\ActionCreators\\RegisterActions.js":"14","E:\\Web\\CS299\\quiz-time\\src\\redux\\groups.js":"15","E:\\Web\\CS299\\quiz-time\\src\\redux\\TestAction.js":"16","E:\\Web\\CS299\\quiz-time\\src\\Component\\ExamComponent3.js":"17","E:\\Web\\CS299\\quiz-time\\src\\Component\\CreateTestComponent.js":"18","E:\\Web\\CS299\\quiz-time\\src\\Component\\GroupDetailStudentComponent.js":"19","E:\\Web\\CS299\\quiz-time\\src\\Component\\EditTestComponent.js":"20","E:\\Web\\CS299\\quiz-time\\src\\Component\\LoginComponent.js":"21","E:\\Web\\CS299\\quiz-time\\src\\Component\\StudentTestResultComponent2.js":"22","E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminTestResultStudent3.js":"23","E:\\Web\\CS299\\quiz-time\\src\\Component\\StudentTestResultComponent3.js":"24","E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminSummaryComponent.js":"25","E:\\Web\\CS299\\quiz-time\\src\\Component\\HeaderComponent.js":"26","E:\\Web\\CS299\\quiz-time\\src\\Component\\HomeComponent.js":"27","E:\\Web\\CS299\\quiz-time\\src\\Component\\GroupDetailComponent.js":"28","E:\\Web\\CS299\\quiz-time\\src\\Component\\StudentComponent.js":"29","E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminComponent.js":"30","E:\\Web\\CS299\\quiz-time\\src\\redux\\auth.js":"31","E:\\Web\\CS299\\quiz-time\\src\\redux\\ActionTypes.js":"32","E:\\Web\\CS299\\quiz-time\\src\\shared\\baseUrl.js":"33","E:\\Web\\CS299\\quiz-time\\src\\redux\\ActionCreators\\LoginActions.js":"34","E:\\Web\\CS299\\quiz-time\\src\\Component\\AuthIFrame.js":"35","E:\\Web\\CS299\\quiz-time\\src\\Component\\HelpComponent.js":"36","E:\\Web\\CS299\\quiz-time\\src\\Component\\ContactUsComponent.js":"37","E:\\Web\\CS299\\quiz-time\\src\\Component\\DetailComponent.js":"38","E:\\Web\\CS299\\quiz-time\\src\\Component\\RecoveryComponent.js":"39"},{"size":635,"mtime":1616933780821,"results":"40","hashOfConfig":"41"},{"size":5227,"mtime":1610954438669,"results":"42","hashOfConfig":"41"},{"size":497,"mtime":1615088474772,"results":"43","hashOfConfig":"41"},{"size":6702,"mtime":1619098567708,"results":"44","hashOfConfig":"41"},{"size":535,"mtime":1614841042508,"results":"45","hashOfConfig":"41"},{"size":9122,"mtime":1616128187011,"results":"46","hashOfConfig":"41"},{"size":2914,"mtime":1611242864513,"results":"47","hashOfConfig":"41"},{"size":5969,"mtime":1616929317269,"results":"48","hashOfConfig":"41"},{"size":11206,"mtime":1616929008801,"results":"49","hashOfConfig":"41"},{"size":9991,"mtime":1616929011453,"results":"50","hashOfConfig":"41"},{"size":10161,"mtime":1616928710650,"results":"51","hashOfConfig":"41"},{"size":21837,"mtime":1618562890595,"results":"52","hashOfConfig":"41"},{"size":5103,"mtime":1616928635313,"results":"53","hashOfConfig":"41"},{"size":3299,"mtime":1615043347707,"results":"54","hashOfConfig":"41"},{"size":639,"mtime":1614841030604,"results":"55","hashOfConfig":"41"},{"size":2507,"mtime":1611835925290,"results":"56","hashOfConfig":"41"},{"size":10642,"mtime":1617958932935,"results":"57","hashOfConfig":"41"},{"size":9050,"mtime":1617693370064,"results":"58","hashOfConfig":"41"},{"size":8458,"mtime":1616929225082,"results":"59","hashOfConfig":"41"},{"size":31090,"mtime":1617868725670,"results":"60","hashOfConfig":"41"},{"size":5624,"mtime":1619098116962,"results":"61","hashOfConfig":"41"},{"size":7392,"mtime":1616929305995,"results":"62","hashOfConfig":"41"},{"size":12368,"mtime":1617337342745,"results":"63","hashOfConfig":"41"},{"size":7328,"mtime":1617339565703,"results":"64","hashOfConfig":"41"},{"size":3371,"mtime":1616928572780,"results":"65","hashOfConfig":"41"},{"size":7080,"mtime":1618551632839,"results":"66","hashOfConfig":"41"},{"size":2950,"mtime":1616916506626,"results":"67","hashOfConfig":"41"},{"size":17313,"mtime":1616929102925,"results":"68","hashOfConfig":"41"},{"size":7085,"mtime":1616929261050,"results":"69","hashOfConfig":"41"},{"size":7122,"mtime":1617537042061,"results":"70","hashOfConfig":"41"},{"size":1661,"mtime":1617945029400,"results":"71","hashOfConfig":"41"},{"size":1954,"mtime":1614840435224,"results":"72","hashOfConfig":"41"},{"size":109,"mtime":1617943151913,"results":"73","hashOfConfig":"41"},{"size":4351,"mtime":1617944083663,"results":"74","hashOfConfig":"41"},{"size":875,"mtime":1617338409636,"results":"75","hashOfConfig":"41"},{"size":2678,"mtime":1618463365313,"results":"76","hashOfConfig":"41"},{"size":3603,"mtime":1618468549130,"results":"77","hashOfConfig":"41"},{"size":9481,"mtime":1618551545642,"results":"78","hashOfConfig":"41"},{"size":12620,"mtime":1619149756283,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1vstccx",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Web\\CS299\\quiz-time\\src\\index.js",[],["161","162"],"E:\\Web\\CS299\\quiz-time\\src\\serviceWorker.js",[],"E:\\Web\\CS299\\quiz-time\\src\\App.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\MainComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\redux\\configureStore.js",[],"E:\\Web\\CS299\\quiz-time\\src\\redux\\ActionCreators\\GroupActions.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\FooterComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\StudentTestResultComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\ExamComponent2.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\ExamComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminTestResultStudent2.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\RegisterComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminTestResultStudent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\redux\\ActionCreators\\RegisterActions.js",[],"E:\\Web\\CS299\\quiz-time\\src\\redux\\groups.js",[],"E:\\Web\\CS299\\quiz-time\\src\\redux\\TestAction.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\ExamComponent3.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\CreateTestComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\GroupDetailStudentComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\EditTestComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\LoginComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\StudentTestResultComponent2.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminTestResultStudent3.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\StudentTestResultComponent3.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminSummaryComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\HeaderComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\HomeComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\GroupDetailComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\StudentComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\AdminComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\redux\\auth.js",[],"E:\\Web\\CS299\\quiz-time\\src\\redux\\ActionTypes.js",[],"E:\\Web\\CS299\\quiz-time\\src\\shared\\baseUrl.js",[],"E:\\Web\\CS299\\quiz-time\\src\\redux\\ActionCreators\\LoginActions.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\AuthIFrame.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\HelpComponent.js",[],"E:\\Web\\CS299\\quiz-time\\src\\Component\\ContactUsComponent.js",["163"],"import React, { Component } from 'react'\r\nimport * as emailjs from 'emailjs-com'\r\n// emailjs.init('user_yprI4H79h2JW33apW4oPD');\r\n// import Layout from '../components/layout'\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input, Col } from 'reactstrap'\r\nclass Contact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: '',\r\n  }\r\nhandleSubmit(e) {\r\n    e.preventDefault()\r\n    const { name, email, subject, message } = this.state\r\n    let templateParams = {\r\n      from_name: name,\r\n      reply_to: email,\r\n      subject: subject,\r\n      message_html: message,\r\n     }\r\n     emailjs.send(\r\n      'quizTimeFeedback_376',\r\n      'template_7jw4s6a',\r\n       templateParams,\r\n      'user_yprI4H79h2JW33apW4oPD'\r\n     )\r\n     this.resetForm()\r\n }\r\nresetForm() {\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      subject: '',\r\n      message: '',\r\n    })\r\n  }\r\nhandleChange = (param, e) => {\r\n    this.setState({ [param]: e.target.value })\r\n  }\r\nrender() {\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div className=\"col-12\" style={{'padding-top':20+'px'}}>\r\n                <h1 className=\"p-heading1\">Get in Touch</h1>\r\n            </div>\r\n            </div>\r\n          <div className=\"row  row-content\">\r\n              <div className=\"col-12\">\r\n\r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n            <FormGroup  row controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted \" md={2}>Email address</Label>\r\n              <Col md={10}>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'email')}\r\n                placeholder=\"Enter email\"\r\n              />\r\n              </Col>\r\n              \r\n            </FormGroup>\r\n<FormGroup row controlId=\"formBasicName\">\r\n              <Label className=\"text-muted \" md={2}>Name</Label>\r\n              <Col md={10}>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                className=\"text-primary\"\r\n                onChange={this.handleChange.bind(this, 'name')}\r\n                placeholder=\"Name\"\r\n              />\r\n              </Col>\r\n             \r\n            </FormGroup>\r\n<FormGroup row controlId=\"formBasicSubject \">\r\n              <Label className=\"text-muted\" md={2}>Subject</Label>\r\n              <Col md={10}>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"subject\"\r\n                className=\"text-primary\"\r\n                value={this.state.subject}\r\n                onChange={this.handleChange.bind(this, 'subject')}\r\n                placeholder=\"Subject\"\r\n              />\r\n              </Col>\r\n              \r\n            </FormGroup>\r\n<FormGroup row controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted \" md={2}>Message</Label>\r\n              <Col md={10}>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={this.state.message}\r\n                onChange={this.handleChange.bind(this, 'message')}\r\n              />\r\n              </Col>\r\n              \r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          </div>\r\n       </div>\r\n       </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Contact","E:\\Web\\CS299\\quiz-time\\src\\Component\\DetailComponent.js",["164","165","166"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card, CardBody, CardHeader, Form, FormGroup, FormFeedback, Col, Input, Button, Modal,ModalBody,ModalHeader,Table } from 'reactstrap';\r\nimport { loginUser } from '../redux/ActionCreators/LoginActions';\r\nimport {baseUrl} from \"../shared/baseUrl\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loginUser: (creds) => dispatch(loginUser(creds)),\r\n\r\n});\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n\r\n});\r\n\r\n\r\n\r\n\r\nclass Details extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            admin: false,\r\n            oldpass:'',\r\n            newpass:'',\r\n            confpass:'',\r\n            isModalOpen:false,\r\n            touched:{\r\n                oldpass:false,\r\n                newpass:false,\r\n                confpass:false,\r\n            }\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleChangePassword=this.handleChangePassword.bind(this);\r\n        this.toggleModal=this.toggleModal.bind(this);\r\n        this.handleBlur=this.handleBlur.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    };\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen:!this.state.isModalOpen\r\n        })\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    validate(oldpass,newpass,confpass) {\r\n        const errors = {\r\n            oldpass:'',\r\n            newpass: '',\r\n            confpass: ''\r\n        };  \r\n        if(this.state.touched.oldpass&&oldpass=='')\r\n        {\r\n            errors.oldpass = 'Old password cannot be empty.';\r\n        }\r\n        if (this.state.touched.newpass && newpass.length < 8)\r\n            errors.newpass = 'New password should be >= 8 characters';\r\n        if (this.state.touched.confpass && confpass!==newpass)\r\n            errors.confpass = \"New password and Confirm password doesn't match\";\r\n        return errors;\r\n    }\r\n\r\n    handleChangePassword(event) {\r\n        event.preventDefault();\r\n        var user = {\r\n            oldpass: this.state.oldpass,\r\n            newpass: this.state.newpass,\r\n            \r\n        };\r\n        const userType=this.props.auth.isAdmin ? 'admin' : 'student'\r\n        const bearer=\"Bearer \"+localStorage.getItem('token');\r\n        fetch(baseUrl+userType+'/changepass', {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              'Authorization': bearer\r\n            },\r\n            body:JSON.stringify(user),\r\n            credentials: \"same-origin\"\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if(result.success)\r\n                {\r\n                    localStorage.setItem('token',result.token);\r\n                    alert(result.status);\r\n                    this.toggleModal()\r\n                }\r\n                else\r\n                {\r\n                    alert(result.error.message);\r\n                    this.toggleModal();\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n\r\n       \r\n        \r\n    }\r\n    render() {\r\n            const errors = this.validate(this.state.oldpass,this.state.newpass,this.state.confpass);\r\n            const user =this.props.auth.user;\r\n            var actype=this.props.auth.isAdmin?\"Administrator\":\"User\";\r\n            var orgname=this.props.auth.isAdmin?(<><tr>\r\n                <td><b>Organisation</b></td>\r\n                <td>{user.organisation}</td>\r\n            </tr></>):(<></>);\r\n            // console.log(this.props.auth)\r\n            return (\r\n                <>\r\n                    <div className='container'>\r\n                        <div className='row justify-content-center'>\r\n                            <div className='col-md-6'style={{'padding':20+'px'}} >\r\n                                <Card >\r\n                                    <CardHeader ><h3><b>Profile</b></h3></CardHeader>\r\n                                    <CardBody>\r\n                                    <Table striped bordered hover>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td><b>Name</b> </td>\r\n                                                    <td>{user.firstname} {user.lastname}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td><b>Email</b> </td>\r\n                                                    <td>{user.email}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td><b>Account Type</b> </td>\r\n                                                    <td>{actype}</td>\r\n                                                </tr>\r\n                                                {orgname}\r\n                                                \r\n                                            </tbody>\r\n                                        </Table>\r\n                                        <Button onClick={this.toggleModal} type=\"submit\" color=\"primary\">Change Password</Button>\r\n                                    </CardBody>\r\n                                </Card>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}><strong> Change Password </strong></ModalHeader>\r\n                        <ModalBody >\r\n                            <Form onSubmit={this.handleChangePassword}>\r\n                                <FormGroup row>\r\n                                    <Col md={10} >\r\n                                        <Input type=\"password\" id=\"oldpass\" name=\"oldpass\"\r\n                                            placeholder=\"Old Password\"\r\n                                            value={this.state.oldpass}\r\n                                            valid={errors.oldpass === ''}\r\n                                            invalid={errors.oldpass !== ''}\r\n                                            onBlur={this.handleBlur('oldpass')}\r\n                                            onChange={this.handleInputChange} required />\r\n                                        <FormFeedback>{errors.oldpass}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Col md={10} >\r\n                                        <Input type=\"password\" id=\"newpass\" name=\"newpass\"\r\n                                            placeholder=\"New Password\"\r\n                                            value={this.state.newpass}\r\n                                            valid={errors.newpass === ''}\r\n                                            invalid={errors.newpass !== ''}\r\n                                            onBlur={this.handleBlur('newpass')}\r\n                                            onChange={this.handleInputChange} required />\r\n                                        <FormFeedback>{errors.newpass}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Col md={10} >\r\n                                        <Input type=\"password\" id=\"confpass\" name=\"confpass\"\r\n                                            placeholder=\"Confirm New Password\"\r\n                                            value={this.state.confpass}\r\n                                            valid={errors.confpass === ''}\r\n                                            invalid={errors.confpass !== ''}\r\n                                            onBlur={this.handleBlur('confpass')}\r\n                                            onChange={this.handleInputChange} required />\r\n                                        <FormFeedback>{errors.confpass}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Col md={{ size: 10 }}>\r\n                                        <Button type=\"submit\" color=\"danger\">\r\n                                            Change Password\r\n                                        </Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </>\r\n            );\r\n        }\r\n}\r\nexport default connect(mapStateToProps,null)(Details);","E:\\Web\\CS299\\quiz-time\\src\\Component\\RecoveryComponent.js",["167","168"],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":5,"column":18,"nodeType":"175","messageId":"176","endLine":5,"endColumn":30},{"ruleId":"173","severity":1,"message":"177","line":6,"column":10,"nodeType":"175","messageId":"176","endLine":6,"endColumn":18},{"ruleId":"173","severity":1,"message":"178","line":8,"column":7,"nodeType":"175","messageId":"176","endLine":8,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":70,"column":47,"nodeType":"181","messageId":"182","endLine":70,"endColumn":49},{"ruleId":"173","severity":1,"message":"177","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":18},{"ruleId":"173","severity":1,"message":"183","line":3,"column":20,"nodeType":"175","messageId":"176","endLine":3,"endColumn":24},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'FormFeedback' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'mapDispatchToProps' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]